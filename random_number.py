from qiskit import QuantumCircuit
from qiskit_aer.primitives import Sampler

# Create a quantum circuit with 1 qubit
qc = QuantumCircuit(1)
qc.h(0)        # Apply Hadamard gate to create superposition
qc.measure_all()  # Measure all qubits

# Create a sampler (new Qiskit 2.0 style)
sampler = Sampler()

# Run the circuit once
job = sampler.run(qc)
result = job.result()

# Get the probabilities (it's a dictionary like {'0': 0.5, '1': 0.5})
probabilities = result.quasi_dists[0]

# Choose the most probable outcome (simulate one random measurement)
import randomgit init

outcomes = list(probabilities.keys())
chosen_outcome = random.choices(outcomes, weights=probabilities.values())[0]

print(f"Random bit generated by quantum circuit: {chosen_outcome}")
